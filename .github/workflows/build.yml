# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test Server Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-test-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-test-

      - name: Run Docker Compose Environment
        run: |
          docker-compose -f docker/docker-compose-unittest.yml up -d

      - name: Rename application.yml
        run: |
          mv src/main/resources/application-unittest.yml src/main/resources/application.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Test and Build Spring project
        run: |
          gradle build

      - name: Collect Jar
        run: |
          rm -rf build/libs/*-plain.jar
          mv build/libs/*.jar build/libs/app.jar

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/test/jacocoTestReport.xml
          fail_ci_if_error: true

      - name: Build and push docker image
        run: |
          docker login registry.cn-hangzhou.aliyuncs.com --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
          docker build -f docker/spring/Dockerfile -t registry.cn-hangzhou.aliyuncs.com/ziqiang_studio/teamup-pub:chat-test .
          docker push registry.cn-hangzhou.aliyuncs.com/ziqiang_studio/teamup-pub:chat-test

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: deploy docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SSH_HOST }}
          username: ${{ secrets.TEST_SSH_USERNAME }}
          password: ${{ secrets.TEST_SSH_PASSWORD }}
          script: |
            cd ~/backend-test
            docker login registry.cn-hangzhou.aliyuncs.com --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f
